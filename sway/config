# Based on Garuda Linux sway config
# user config directory
include $HOME/.config/sway/config.d/*
# only enable this if every app you use is compatible with wayland
# xwayland disable

# DEFAULTS
# Logo key. Use Mod1 for Alt.
set $mod Mod4

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Your preferred terminal emulators
set $term-float kitty fish

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu ~/.config/rofi/launchers/type-1/launcher.sh
set $launcher nwg-drawer -c 7 -is 70 -spacing 23
set $powermenu powermenu_t1
set $cheat micro ~/.config/sway/cheatsheet
set $emoji rofi -modi emoji -show emoji

### Idle configuration
# exec swayidle -w\
#     timeout 1070 'swaylock -f -C ~/.config/swaylock/config'\
#     timeout 770 'swaymsg "output * dpms off"' \
#     resume 'swaymsg "output * dpms on"' \
#     before-sleep 'swaylock -C ~/.config/swaylock/config'
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
# Lock Screen
# bindsym $mod+f1 exec ~/.config/sway/scripts/lockman.sh

### Key bindings
# Basics:
    # Start a floating terminal
    bindsym $mod+Return exec $term-float
    # Open the power menu
    bindsym $mod+X exec nwgbar
    # Kill focused window
    bindsym $mod+q kill
    # Start your launcher
    bindsym $mod+d exec $menu
    # Emoji picker
    bindsym $mod+e exec $emoji
    # Launcher
    bindsym $mod+Shift+d exec $launcher
    # Activities
    bindsym $mod+p exec swayr switch-window
    # Activities and workspaces
    bindsym $mod+Shift+p exec swayr switch-workspace-or-window
    # Switch to the last recently used window
    bindsym $mod+Tab exec swayr switch-to-urgent-or-lru-window
    # Cheatsheet
    bindsym $mod+Shift+i exec $cheat
    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal
    # restart sway in place
    bindsym $mod+Shift+r restart
    # Reload the configuration file
    bindsym $mod+Shift+c reload
# Moving around:
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right
    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
	# Workspaces:
	bindsym --no-repeat $mod+1 workspace number 1; exec "echo 1 > /tmp/sovpipe"
	bindsym --no-repeat $mod+2 workspace number 2; exec "echo 1 > /tmp/sovpipe"
	bindsym --no-repeat $mod+3 workspace number 3; exec "echo 1 > /tmp/sovpipe"
	bindsym --no-repeat $mod+4 workspace number 4; exec "echo 1 > /tmp/sovpipe"
	bindsym --no-repeat $mod+5 workspace number 5; exec "echo 1 > /tmp/sovpipe"
	bindsym --no-repeat $mod+6 workspace number 6; exec "echo 1 > /tmp/sovpipe"
	bindsym --no-repeat $mod+7 workspace number 7; exec "echo 1 > /tmp/sovpipe"
	bindsym --no-repeat $mod+8 workspace number 8; exec "echo 1 > /tmp/sovpipe"
	bindsym --no-repeat $mod+9 workspace number 9; exec "echo 1 > /tmp/sovpipe"
	bindsym --no-repeat $mod+0 workspace number 10; exec "echo 1 > /tmp/sovpipe"
	bindsym --release $mod+1 exec "echo 0 > /tmp/sovpipe"
	bindsym --release $mod+2 exec "echo 0 > /tmp/sovpipe"
	bindsym --release $mod+3 exec "echo 0 > /tmp/sovpipe"
	bindsym --release $mod+4 exec "echo 0 > /tmp/sovpipe"
	bindsym --release $mod+5 exec "echo 0 > /tmp/sovpipe"
	bindsym --release $mod+6 exec "echo 0 > /tmp/sovpipe"
	bindsym --release $mod+7 exec "echo 0 > /tmp/sovpipe"
	bindsym --release $mod+8 exec "echo 0 > /tmp/sovpipe"
	bindsym --release $mod+9 exec "echo 0 > /tmp/sovpipe"
	bindsym --release $mod+0 exec "echo 0 > /tmp/sovpipe"
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
# Layout stuff:
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv
    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+z layout toggle split
    # Make the current focus fullscreen
    bindsym $mod+f fullscreen
    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle
    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle
    # Move focus to the parent container
    bindsym $mod+a focus parent
# Scratchpad:
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.
    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad
    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
# Resizing containers:
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px
    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px
    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"
# Resize floating windows with mouse scroll:
bindsym --whole-window --border $mod+button4 resize shrink height 5 px or 5 ppt
bindsym --whole-window --border $mod+button5 resize grow height 5 px or 5 ppt
bindsym --whole-window --border $mod+shift+button4 resize shrink width 5 px or 5 ppt
bindsym --whole-window --border $mod+shift+button5 resize grow width 5 px or 5 ppt
# Volume
bindsym XF86AudioRaiseVolume exec pamixer -ui 2 && pamixer --get-volume > $SWAYSOCK.wob
bindsym XF86AudioLowerVolume exec pamixer -ud 2 && pamixer --get-volume > $SWAYSOCK.wob
bindsym XF86AudioMute exec pamixer --toggle-mute && ( pamixer --get-mute && echo 0 > $SWAYSOCK.wob ) || pamixer --get-volume > $SWAYSOCK.wob
# bindsym XF86AudioRaiseVolume exec "pw-volume change +2.5%; pkill -RTMIN+8 waybar"
# bindsym XF86AudioLowerVolume exec "pw-volume change -2.5%; pkill -RTMIN+8 waybar"
# bindsym XF86AudioMute exec "pw-volume mute toggle; pkill -RTMIN+8 waybar"
# Player
    bindsym XF86AudioPlay exec playerctl play
    bindsym XF86AudioPause exec playerctl pause
    bindsym XF86AudioNext exec playerctl next
    bindsym XF86AudioPrev exec playerctl previous
# Backlight
    bindsym XF86MonBrightnessUp exec light -A 5 && light -G | cut -d'.' -f1 > $SWAYSOCK.wob
    bindsym XF86MonBrightnessDown exec light -U 5 && light -G | cut -d'.' -f1 > $SWAYSOCK.wob
# App shortcuts
    bindsym $mod+n exec thunar
    bindsym $mod+o exec google-chrome-stable
    bindsym $mod+g exec github-desktop
# Screenshots
    bindsym print exec /usr/share/sway/scripts/grimshot --notify save output
    bindsym Shift+print exec ~/.config/sway/scripts/screenshot.sh

# APPLICATION DEFAULTS
# set floating (nontiling)for apps needing it:
for_window [class="Yad" instance="yad"] floating enable
for_window [app_id="yad"] floating enable
for_window [app_id="blueman-manager"] floating enable,  resize set width 40 ppt height 30 ppt
# set floating (nontiling) for special apps:
for_window [class="Xsane" instance="xsane"] floating enable
for_window [app_id="pavucontrol" ] floating enable, resize set width 40 ppt height 30 ppt
for_window [class="qt5ct" instance="qt5ct"] floating enable, resize set width 60 ppt height 50 ppt
for_window [class="Bluetooth-sendto" instance="bluetooth-sendto"] floating enable
for_window [app_id="pamac-manager"] floating enable, resize set width 80 ppt height 70 ppt
for_window [class="Lxappearance"] floating enable, resize set width 60 ppt height 50 ppt
# set floating for window roles
for_window [window_role="pop-up"] floating enable
for_window [window_role="bubble"] floating enable
for_window [window_role="task_dialog"] floating enable
for_window [window_role="Preferences"] floating enable
for_window [window_type="dialog"] floating enable
for_window [window_type="menu"] floating enable
for_window [window_role="About"] floating enable
for_window [title="File Operation Progress"] floating enable, border pixel 1, sticky enable, resize set width 40 ppt height 30 ppt
for_window [app_id="firedragon" title="Library"] floating enable, border pixel 1, sticky enable, resize set width 40 ppt height 30 ppt
for_window [app_id="floating_shell_portrait"] floating enable, border pixel 1, sticky enable, resize set width 30 ppt height 40 ppt
for_window [title="Picture in picture"] floating enable, sticky enable
for_window [title="nmtui"] floating enable,  resize set width 50 ppt height 70 ppt
for_window [title="htop"] floating enable, resize set width 50 ppt height 70 ppt
for_window [app_id="calcurse"] floating enable, resize set 1280 720, position center
for_window [title="Picture-in-Picture"] floating enable, resize set 500 300, position center
for_window [app_id="pavu"] floating enable, resize set 1280 720, position center
for_window [app_id="imv"] floating enable, resize set 1280 720, position center
for_window [app_id="easyeffects"] floating enable, resize set 1280 720, position center
floating_minimum_size 640 x 480
floating_maximum_size 1280 x 720
for_window [app_id="xsensors"] floating enable
for_window [title="Save File"] floating enable
for_window [app_id="firedragon" title="firedragon — Sharing Indicator"] kill
# Inhibit idle
for_window [app_id="firedragon"] inhibit_idle fullscreen
for_window [app_id="Chromium"] inhibit_idle fullscreen

# swaysock
exec systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK
# Auth with polkit-gnome:
#exec /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
# Desktop notifications
exec_always mako
# add app names and icons to sway tabs
exec_always swaywsr -r -c $HOME/.config/swaywsr/config.toml -i awesome
# add icons to sway tabs
#exec swaycons
# use alt+tab to switch windows
exec_always sway-alttab
# GTK3 applications take a long time to start
exec systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK
exec hash dbus-update-activation-environment 2>/dev/null && \
    dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK
# Sway Fader
# exec python3 ~/.config/sway/scripts/swayfader.py     
# Wob
exec mkfifo $SWAYSOCK.wob
exec tail -f $SWAYSOCK.wob | wob --border-color '#ffdcbb8c' --background-color '#cc3a3a3a' --bar-color '#ffdcbb8c'
# sov
exec rm -f /tmp/sovpipe && mkfifo /tmp/sovpipe && tail -f /tmp/sovpipe | sov
exec sworkstyle -d
#exec swaywsr --icons awesome --no-names --remove-duplicates --config $XDG_CONFIG_HOME/swaywsr/config.toml
# Autotiling
exec autotiling
# Wlsunset
exec ~/.config/sway/scripts/light.sh
# nm-applet
exec nm-applet --indicator
# Welcome
exec dex -a -s /etc/xdg/autostart/:~/.config/autostart/
# Clipman
#exec clipman restore
exec wl-paste -t text --watch clipman store
# Gnome Keyring
exec gnome-keyring-daemon --daemonize --start --components=gpg,pkcs11,secrets,ssh
# for Touchpad gestures
exec libinput-gestures-setup start
# Outputs
exec kanshi
# Xdg DEsktop Portal
exec /usr/libexec/xdg-desktop-portal
# Tracker daemon for gnome apps
exec tracker daemon -s
# Cheatsheet
#exec micro ~/.config/sway/cheatsheet
# nwg-drawer
exec_always nwg-drawer -r 
# swayrd
exec_always swayrd
# Clamshell Mode
set $laptop <eDP-1>
bindswitch --reload --locked lid:on output $laptop disable
bindswitch --reload --locked lid:off output $laptop enable
exec_always ~/.config/sway/scripts/clamshell.sh
exec ~/.cargo/bin/wpaperd
### Input configuration
# Example configuration:
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Put your touchpad's ID to replace "Touchpad-ID" (keep the quotation marks)
input "2:7:SynPS/2_Synaptics_Touchpad" {
    left_handed disabled
    tap enabled
    natural_scroll disabled
    dwt enabled
    accel_profile "flat" # disable mouse acceleration (enabled by default; to set it manually, use "adaptive" instead of "flat")
    pointer_accel 0.5 # set mouse sensitivity (between -1 and 1)
}
input type:keyboard xkb_layout "us"
exec_always {
    'swaymsg input type:keyboard xkb_layout "$(localectl status | grep "X11 Layout" | sed -e "s/^.*X11 Layout://")"'
    'swaymsg input type:keyboard xkb_variant "$(localectl status | grep "X11 Variant" | sed -e "s/^.*X11 Variant://")"'
}

### Output configuration
# Example configuration:
output eDP-1 resolution 1366x768 position 1366,0
# You can get the names of your outputs by running: swaymsg -t get_outputs
# Apply gtk theming
exec_always ~/.config/sway/scripts/import-gsettings
# Set inner/outer gaps
smart_gaps on
gaps inner 3
gaps outer 2
seat seat0 xcursor_theme 'Simp1e-Gruvbox-Dark' 24
# Hide titlebar on windows: 
default_border pixel 1
# Default Font
font pango:FiraCode Regular 12
# Thin borders:
smart_borders on
# Set wallpaper:
#exec ~/.azotebg
# variety is used for rotating wallpapers

# Title format for windows
for_window [shell="xdg_shell"] title_format "%title (%app_id)"
for_window [shell="x_wayland"] title_format "%class - %title"

## Window decoration
# Color scheme (Gruvbox dark)
set $color_normal_white  #a89984
set $color_bright_white  #ebdbb2
set $color_normal_gray   #282828
set $color_bright_gray   #3c3836
set $color_bright_yellow #d79921
set $color_normal_black  #1d2021
set $color_unused        #ff0000
# Colors                  border                 background             text                   indicator            child_border
client.focused            $color_bright_gray     $color_bright_gray     $color_bright_white    $color_bright_gray   $color_normal_black
client.focused_inactive   $color_bright_gray     $color_bright_gray     $color_bright_white    $color_bright_gray   $color_normal_black
client.unfocused          $color_normal_gray     $color_normal_gray     $color_normal_white    $color_normal_gray   $color_normal_black
client.urgent             $color_bright_yellow   $color_bright_yellow   $color_normal_black    $color_unused        $color_unused
client.placeholder        $color_unused          $color_unused          $color_unused          $color_unused        $color_unused

# Status Bar:
bar {
    swaybar_command waybar
}
#bar {
#    font pango:FiraCode Mono, FontAwesome 12
#    position top
#    status_command i3status-rs $HOME/.config/i3status-rust/config.toml
#    colors {
#        separator #666666
#        background #1D2021
#        statusline #dddddd
#        focused_workspace #0088CC #0088CC #ffffff
#        active_workspace #333333 #333333 #ffffff
#        inactive_workspace #333333 #333333 #888888
#        urgent_workspace #2f343a #900000 #ffffff
#    }
#}
